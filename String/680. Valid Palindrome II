680. Valid Palindrome II

Given a non-empty string s, you may delete at most one character. Judge whether you can make it a palindrome.

Example 1:
Input: "aba"
Output: True
Example 2:
Input: "abca"
Output: True
Explanation: You could delete the character 'c'.
Note:
The string will only contain lowercase characters a-z. The maximum length of the string is 50000.

class Solution {
    public boolean validPalindrome(String s) {
        if(s == null || s.length() == 0) {
            return false;
        }
        int start = 0, end = s.length() - 1;
        int count = 0;
        while(start < end) {
            if(s.charAt(start) == s.charAt(end)) {
                start++;
                end--;
                continue;
            } else {
                if(s.charAt(start + 1) == s.charAt(end) && helper(s.substring(start + 1, end + 1))) {
                    return true;
                }
                if(s.charAt(start) == s.charAt(end - 1) && helper(s.substring(start, end))) {
                    return true;
                }
                return false;
            }
        }
        return true;
    }
    
    private boolean helper(String s) {
        int start = 0, end = s.length() - 1;
        while(start < end) {
            if(s.charAt(start++) != s.charAt(end--)) {
                return false;
            }
        }
        return true;
    }
}