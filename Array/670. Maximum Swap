670. Maximum Swap

Given a non-negative integer, you could swap two digits at most once to get the maximum valued number. Return the maximum valued number you could get.

Example 1:
Input: 2736
Output: 7236
Explanation: Swap the number 2 and the number 7.
Example 2:
Input: 9973
Output: 9973
Explanation: No swap.
Note:
The given number is in the range [0, 108]

class Solution {
    public int maximumSwap(int num) {
        if(num / 10 == 0) {
            return num;
        }
        char[] number = String.valueOf(num).toCharArray();
        int n = number.length;
        
        Map<Integer, Integer> map = new HashMap<>();
        
        for(int i = 0; i < n; i++) {
            map.put(number[i] - '0', i);
        }
        
        for(int i = 0; i < n; i++) {
            for(int j = 9; j > number[i] - '0'; j--) {
                if(map.containsKey(j) && map.get(j) > i) {
                    int index = map.get(j);
                    char temp = number[i];
                    number[i] = number[index];
                    number[index] = temp;
                    return Integer.parseInt(new String(number));
                }
            }
        }
        
        return num;
    }
}