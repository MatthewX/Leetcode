291. Word Pattern II

Given a pattern and a string str, find if str follows the same pattern.

Here follow means a full match, such that there is a bijection between a letter in pattern and a non-empty substring in str.

Examples:
pattern = "abab", str = "redblueredblue" should return true.
pattern = "aaaa", str = "asdasdasdasd" should return true.
pattern = "aabb", str = "xyzabcxzyabc" should return false.
Notes:
You may assume both pattern and str contains only lowercase letters.

class Solution {
    public boolean wordPatternMatch(String pattern, String str) {
        if(pattern == null || str == null) {
            return false;
        }
        Map<Character, String> map = new HashMap<>();
        return dfs(pattern, 0, str, 0, map);
    }
    
    private boolean dfs(String pattern, int p1, String str, int p2, Map<Character, String> map) {
        if(p1 == pattern.length() && p2 == str.length()) {
            return true;
        }
        if(p1 == pattern.length() || p2 == str.length()) {
            return false;
        }
        char c = pattern.charAt(p1);
        if(map.containsKey(c)) {
            String word = map.get(c);
            if(!str.startsWith(word, p2)) {
                return false;
            }
            return dfs(pattern, p1 + 1, str, p2 + word.length(), map);
        }
        
        for(int i = p2; i < str.length(); i++) {
            String word = str.substring(p2, i + 1);
            if(map.containsValue(word)) {
                continue;
            }
            map.put(c, word);
            if(dfs(pattern, p1 + 1, str, p2 + word.length(), map)) {
                return true;
            }
            map.remove(c);
        }
        return false;
    }
}