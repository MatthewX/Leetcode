668. Kth Smallest Number in Multiplication Table

Nearly every one have used the Multiplication Table. But could you find out the k-th smallest number quickly from the multiplication table?

Given the height m and the length n of a m * n Multiplication Table, and a positive integer k, you need to return the k-th smallest number in this table.

Example 1:
Input: m = 3, n = 3, k = 5
Output: 
Explanation: 
The Multiplication Table:
1	2	3
2	4	6
3	6	9

The 5-th smallest number is 3 (1, 2, 2, 3, 3).
Example 2:
Input: m = 2, n = 3, k = 6
Output: 
Explanation: 
The Multiplication Table:
1	2	3
2	4	6

The 6-th smallest number is 6 (1, 2, 2, 3, 4, 6).
Note:
The m and n will be in the range [1, 30000].
The k will be in the range [1, m * n]

class Solution {
    
    private boolean isMulti;
    
    public int findKthNumber(int m, int n, int k) {
        int left = 1, right = m * n;
        int count = 0;
        isMulti = false;
        while(left + 1 < right) {
        	isMulti = false;
            int mid = left + (right - left) / 2;
            count = countNum(mid, m, n);
            if(count == k) {
                if(isMulti) {
                    return mid;
                }
                right = mid;
            } else if(count > k) {
                right = mid;
            } else {
                left = mid;
            }
        }
        for(int i = 1; i <= m; i++) {
            count += Math.min(n, left / i);
        }
        if(count == k && isMulti) {
            return left;
        }
        return right;
    }
    
    private int countNum(int mid, int m, int n) {
        int count = 0;
        for(int i = 1; i <= m; i++) {
            if(mid % i == 0 && mid / i <= n) {
                isMulti = true;
            }
            count += Math.min(n, mid / i);
        }
        return count;
    }
}